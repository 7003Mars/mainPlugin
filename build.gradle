buildscript {
    ext.kotlin_version = '1.8.0'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
plugins {
    id 'application'
//    id 'org.openjfx.javafxplugin' version '0.0.10'
//    id "nebula.lint" version "18.0.3"
}
apply plugin: "java"
apply plugin: 'kotlin'
apply plugin: 'application'
//gradleLint.rules = ['all-dependency']
version '1.0'
//javafx {
//    version = "18.0.2"
//    modules = ['javafx.controls']
//}
sourceCompatibility = 16

repositories {
    maven { url 'https://www.jitpack.io' }
    maven {
        name 'm2-dv8tion'
        url 'https://m2.dv8tion.net/releases'
    }
    mavenLocal()
    mavenCentral()
    maven{ url "https://oss.sonatype.org/content/repositories/snapshots/" }
    maven{ url "https://oss.sonatype.org/content/repositories/releases/" }
    maven{ url 'https://jitpack.io' }
    maven{
        name 'm2-dv8tion'
        url 'https://m2.dv8tion.net/releases'
    }
    mavenCentral()
}

allprojects{
    repositories{
        mavenLocal()
        mavenCentral()
        maven{ url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven{ url "https://oss.sonatype.org/content/repositories/releases/" }
        maven{ url 'https://jitpack.io' }
        maven{
            name 'm2-dv8tion'
            url 'https://m2.dv8tion.net/releases'
        }
    }
}

ext {
    //the build number that this plugin is made for
    arcVersion = 'v144.3'
}

dependencies {
//    implementation 'org.jsoup:jsoup:1.14.3'
//    implementation 'junit:junit:4.13.1'
//    compileOnly("com.github.Anuken.Arc:arc-core:$arcVersion")
//    compileOnly("com.github.Anuken.Mindustry:core:$arcVersion")
    compileOnly "com.github.Anuken.mindustryjitpack:server:$arcVersion"
    compileOnly "com.github.Anuken.mindustryjitpack:core:v144.3"
    compileOnly "com.github.Anuken.Arc:arc-core:$arcVersion"
//    compileOnly("com.github.fuzzbuck.Mindustry:core:$mindustryVersion")
//    compileOnly("com.github.fuzzbuck.Mindustry:server:$mindustryVersion")
    implementation group: 'org.json', name: 'json', version: '20210307'
//    compileOnly 'org.springframework.data:spring-data-redis:2.6.0'
//    compileOnly 'redis.clients:jedis:3.6.3'
//    compileOnly('org.glassfish.jersey.core:jersey-client:3.0.3')
//    compileOnly("redis.clients:jedis:3.2.0")
//    compileOnly('org.apache.commons:commons-pool2:2.15.0')
//    compileOnly('redis.clients:jedis:3.6.3')

    implementation('org.javacord:javacord:3.5.0')
//    compileOnly('javax.ws.rs:javax.ws.rs-api:2.1.1')
//    implementation 'com.google.code.gson:gson:2.9.0'
    implementation("net.dv8tion:JDA:4.3.0_277")
//    implementation group: 'jfree', name: 'jcommon', version: '1.0.16'
    implementation 'jfree:jfreechart:1.0.13'

//    implementation 'org.postgresql:postgresql:42.2.24.jre7'
    // http://mvnrepository.com/artifact/postgresql/postgresql
//    implementation group: 'postgresql', name: 'postgresql', version: '9.0-801.jdbc4'
    implementation 'org.postgresql:postgresql:42.4.1'
//    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
//    runtimeOnly 'org.apache.logging.log4j:log4j-to-slf4j:2.17.1'
//    runtimeOnly 'ch.qos.logback:logback-classic:1.2.11'

    // https://mvnrepository.com/artifact/com.github.kevinsawicki/http-request
//    implementation group: 'com.github.kevinsawicki', name: 'http-request', version: '6.0'

//    implementation 'org.openjfx:javafx-controls:20-ea+1'
//    implementation 'org.openjfx:javafx-swing:20-ea+1'
//    implementation 'org.openjfx:javafx-swing:11-ea+24'

    compileOnly "com.github.7003Mars:rollback:1.1"
}

jar {
    version = null
    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from {
        configurations.runtimeClasspath.findAll { !it.name.endsWith('pom') }.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

//jar {
//    version = null
//    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
//    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
//
//    from {
//        configurations.runtimeClasspath.findAll { !it.name.endsWith('pom') }.collect { it.isDirectory() ? it : zipTree(it) }
//    }
//    archiveName 'PlotTest.jar'
//
//    doFirst {
//        manifest(({
//            if (!configurations.runtimeClasspath.isEmpty()) {
//                attributes(
//                        'Class-Path': configurations.runtimeClasspath.collect { it.toURI().toString() }.join(' '),
//                        'Main-Class': 'mindustry.plugin.utils.plot.SkillMatchBar')
//            }
//        } as groovy.lang.Closure<?>))
//    }
//}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}